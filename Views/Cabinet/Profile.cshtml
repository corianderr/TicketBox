@model ProfileViewModel

@{ 
    ViewBag.Title = "Личный кабинет";
}

<div class="border p-5">
    <div class="row">
        <div class="col-md-4">
            <img src="@Model.User.AvatarLink" alt="avatar" />
        </div>
        <div class="col-md-8">
            <p>@Model.User.Email</p>
            <p>@Model.User.PhoneNumber</p>
            <p></p>
        </div>
    </div>
</div>

<div>
    @foreach (var item in Model.Events)
    {
    <div class="row p-5">
        <div class="descriptions col-md-6">
            <p>@item.Name</p>
            <p>@item.Location.Name</p>
            <p>@item.EventStart.ToLongTimeString()</p>
            <p>@item.Status.ToString()</p>
            <p hidden>@item.Id</p>
            <p>@item.CreatedAt</p>
        </div>
        <div class="buttons col-md-6">
            @if (User.IsInRole("organizer"))
            {
                @switch (item.Status)
                {
                    case Status.NotDefined:
                        <a class="btn btn-primary requestForNew" onclick="RequestForNew(this)">отправить заявку на модерацию</a><br />
                        <a class="btn btn-primary" asp-controller="Event" asp-action="Edit">Редактировать</a><br />
                        break;
                    case Status.Rejected:
                        <a class="btn btn-primary requestForNew" onclick="RequestForNew(this)">отправить заявку на модерацию</a><br />
                        <a class="btn btn-primary" asp-controller="Event" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a><br />
                        break;
                    case Status.New:
                        <p>ожидайте одобрения админа</p><br />
                        break;
                    case Status.Published:
                        <a class="btn btn-primary requestForUnPublish" onclick="RequestForUnPublish(this)">снять с публикации</a><br />
                        break;
                    case Status.UnPublished:
                        <a class="btn btn-primary requestForPublishAgain" onclick="RequestForPublishAgain(this)">вернуть в публикации</a><br />
                        break;
                    case Status.Expired:
                        <p>мероприятия уже прошло</p><br />
                        break;
                }
            }
            else
            {
                @if (item.Status != Status.New)
                {
                    <a class="btn btn-primary mb-1">редактировать</a><br />
                }
                @switch (item.Status)
                {
                    case Status.New:
                        <a class="btn btn-primary">одобрить</a>
                        <a class="btn btn-primary">отклонить</a>
                        <span>создание</span><br />
                        break;
                    case Status.ReviewPublished:
                        <a class="btn btn-primary">одобрить возвращение в публикации</a><br />
                        break;
                    case Status.ReviewUnPublished:
                        <a class="btn btn-primary">одобрить снятие с публикации</a><br />
                        break;
                    case Status.Published:
                        <a class="btn btn-primary">снять с публикации</a><br />
                        break;
                    case Status.UnPublished:
                        <a class="btn btn-primary">вернуть в публикации</a><br />
                        break;
                }
            }
        </div>
    </div>
    }
</div>

@section scripts{ 
    <script>


        function RequestForNew(a) {
            var divDescr = $(a).closest('.row').find('div').eq(0)
            var buttons = $(a).closest('.row').find('div').eq(1)
            var idS = divDescr.find('p').eq(4).html()
            $.post('@Url.Action("RequestForNew", "Cabinet")', { id: idS }, function (response) {
                divDescr.find('p').eq(3).text(response.nEw)
                divDescr.find('p').eq(5).text(response.date)
                buttons.children('.requestForNew').fadeOut()
        });
        }

        function RequestForUnPublish(a) {
            var divDescr = $(a).closest('.row').find('div').eq(0)
            var buttons = $(a).closest('.row').find('div').eq(1)
            var idS = divDescr.find('p').eq(4).html()
            $.post('@Url.Action("RequestForUnPublish", "Cabinet")', { id: idS }, function (response) {
                divDescr.find('p').eq(3).text(response.unPubl)
                divDescr.find('p').eq(5).text(response.date)
              buttons.children('.requestForUnPublish').fadeOut()
                  buttons.append('<a class="btn btn-primary requestForPublishAgain"'
                  + 'onclick="RequestForPublishAgain(this)">вернуть в публикации</a>')
        });
        }

        function RequestForPublishAgain(a) {
            var divDescr = $(a).closest('.row').find('div').eq(0)
            var buttons = $(a).closest('.row').find('div').eq(1)
            var idS = divDescr.find('p').eq(4).html()
            $.post('@Url.Action("RequestForPublishAgain", "Cabinet")', { id: idS }, function (response) {
                divDescr.find('p').eq(3).text(response.publ)
                divDescr.find('p').eq(5).text(response.date)
              buttons.children('.requestForPublishAgain').fadeOut()
              buttons.append('<a class="btn btn-primary requestForUnPublish"'
                  + 'onclick="RequestForUnPublish(this)">снять с публикации</a>')
        });
        }

    </script>

}