@model ProfileViewModel

@{
    ViewBag.Title = "Личный кабинет";
}

<h1>Личный кабинет администратора</h1>
<div class="border d-flex">
    <div class="flex-fill">
        <h3 class="card-header">
            @Model.User.UserName
        </h3>
        <p class="card-text">
            <table class="table">
                <tbody>
                    <tr>
                        <td>Почта</td>
                        <td>@Model.User.Email</td>
                    </tr>
                    <tr>
                        <td>Номер телефона</td>
                        <td>@Model.User.PhoneNumber</td>
                    </tr>
                </tbody>
            </table>
        </p>
    </div>
</div>

<div>
    @foreach (var item in Model.Events)
    {
        <div class="card m-1" id="card-@item.Id">
            <div class="card-body d-flex justify-content-between">
                <div>
                    <p>Название: @item.Name</p>
                    <p>Локация: @item.Location.Name</p>
                    <p>Начало: @item.EventStart.ToLongTimeString()</p>
                </div>
                <div>
                    @if (User.IsInRole("organizer"))
                    {
                        @switch (item.Status)
                        {
                            case Status.New:
                                <p>ожидайте одобрения админа</p><br />
                                break;
                            case Status.Rejected:
                                <a class="btn btn-primary">отправить заявку заново</a><br />
                                break;
                            case Status.Published:
                                <a class="btn btn-primary">снять с публикации</a><br />
                                break;
                            case Status.UnPublished:
                                <a class="btn btn-primary">вернуть в публикации</a><br />
                                break;
                            case Status.Expired:
                                <p>мероприятия уже прошло</p><br />
                                break;
                        }
                    }
                    else
                    {
                        @switch (item.Status)
                        {
                            case Status.New:
                                <button class="btn btn-success accept" type="button" id="@item.Id">Принять</button>
                                <button type="button" class="btn btn-danger deny" data-bs-toggle="modal" data-bs-target="#causeModal" id="@item.Id">
                                    Отказать
                                </button>
                                break;
                            case Status.ReviewPublished:
                                <a class="btn btn-success">Одобрить возвращение в публикации</a><br />
                                break;
                            case Status.ReviewUnPublished:
                                <a class="btn btn-success">Одобрить снятие с публикации</a><br />
                                break;
                            case Status.Published:
                                <a class="btn btn-danger">Снять с публикации</a><br />
                                break;
                            case Status.UnPublished:
                                <a class="btn btn-warning">Вернуть в публикации</a><br />
                                break;
                        }
                        @if (item.Status != Status.New)
                        {
                            <a class="btn btn-warning mt-1" asp-action="Edit" asp-controller="Event" asp-route-eventId="@item.Id">Редактировать</a><br />
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>
<!-- Modal Cause -->
<div class="modal fade" id="causeModal" tabindex="-1" aria-labelledby="causeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="causeModalLabel">Введите причину</h5>
            </div>
            <div class="modal-body">
                <div>
                    <textarea class="form-control flex-fill" id="cause-text"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-success" id="cause-confirm" data-bs-dismiss="modal">Подтвердить</button>
            </div>
        </div>
    </div>
</div>
<script>
    let _id;
        $('.accept').on('click', function() {
        _id = this.id;
        $.ajax({
            url: '@Url.Action("ChangeStatus", "Event")',
            type: 'POST',
            data:
            {
                'status': "Accepted",
                'eventId': _id
            },
            success: function (response) {
                if (response.success) {
                    cardRemove(_id);
                }
            }
        })
    })
    $('.deny').on('click', function () {
        _id = this.id;
    })
    $('#cause-confirm').on('click', () => {
        console.log(_id);
        let cause = $('textarea#cause-text').val();
        $('textarea#cause-text').val('');
        $.ajax({
            url: '@Url.Action("ChangeStatus", "Event")',
            type: 'POST',
            data:
            {
                'status': "Rejected",
                'eventId': _id,
                'cause': cause
            },
            success: function (response) {
                if (response.success) {
                    cardRemove(_id);
                }
            }
        })
    })
    function cardRemove(id) {
        $(`#card-${id}`).remove();
    }
</script>