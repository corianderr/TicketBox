@using LetsGo.Core.Entities.Enums
@model LetsGo.UI.ViewModels.ProfileViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer _localizer

<div class="" id="all-events">
    @foreach (var item in Model.Events)
    {
        <div class="card mb-3 event-card" style="border-radius: 15px">
            <div id="event-status" style="display:none;">@item.Status</div>
            <div class="row body" onclick="eventDetails('@item.Id')">
                <div class="pn-page-head col-lg-10" style="border-radius: 0">
                    <img class="blur_img" src="@item.PosterImage" alt="">
                    <div class="row">
                        <div class="col-lg-4 mr-5">
                            <div class="pn-head_image">
                                <img src="@item.PosterImage" alt="" class="rounded">
                            </div>
                        </div>
                        <div class="col-lg-7">
                            <div class="pn-head_title">
                                <h1>@item.Name</h1>
                                <span>@item.AgeLimit +</span>
                            </div>
                            <div class="pn-head_description">
                                <div class="pn-head_text">@item.EventStart.ToShortDateString() @item.EventEnd.ToShortDateString()</div>
                                <div class="pn-head_place">@item.Location.Name</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 my-auto text-center sideBox">
                    <h1 style="font-size: 22px;">@_localizer["Ticket"]</h1>
                    <p>
                        @_localizer["Buy"]: @item.Sold<br />
                        @{ var remainder = item.TicketLimit - item.Sold;}
                        @_localizer["Remained"]: <text>@(@item.Count - @item.Sold)</text>
                    </p>
                </div>
            </div>
            <div class="text-center align-content-between admin-event pt-2 bg-danger">
                <div class="row">
                    <div class="col-lg-2 text-white pt-2">
                        <span>@_localizer["Status"]: </span>
                        @switch (item.Status)
                        {
                            case Status.NotDefined:
                                <span>@_localizer["NotDefined"]</span>
                                break;
                            case Status.Edited:
                                <span>@_localizer["Edited"]</span>
                                break;
                            case Status.Rejected:
                                <span>@_localizer["Rejected"]</span>
                                break;
                            case Status.New:
                                <span>@_localizer["New"]</span>
                                break;
                            case Status.Published:
                                <span>@_localizer["Published"]</span>
                                break;
                            case Status.UnPublished:
                                <span>@_localizer["UnPublished"]</span>
                                break;
                            case Status.ReviewPublished:
                                <span>@_localizer["ReviewPublished"]</span>
                                break;
                            case Status.ReviewUnPublished:
                                <span>@_localizer["ReviewUnPublished"]</span>
                                break;
                            case Status.Expired:
                                <span>@_localizer["Expired"]</span>
                                break;
                            default:
                                <span>...</span>
                                break;
                        }
                    </div>
                    <div class="col-lg-10">
                        @switch (item.Status)
                        {
                            case Status.NotDefined:
                                //to do smth
                                break;
                            case Status.Edited:
                                //to do smth
                                break;
                            case Status.Rejected:
                                <a class="btn btn-danger p-0 px-3 ml-4 mb-2 " asp-controller="Event" asp-action="Edit" asp-route-id="@item.Id"><span class="material-icons my-auto px-3 py-2">edit</span>@_localizer["Edit"]</a>
                                break;
                            case Status.New:
                                <a class="btn btn-danger p-0 px-3 ml-4 mb-2" asp-controller="Event" asp-action="Edit" asp-route-id="@item.Id"><span class="material-icons my-auto px-3 py-2">edit</span></a>
                                break;
                            case Status.Published:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 " id="@item.Id"
                                        onclick="ChangeStatus(this, 'ReviewUnPublished')">
                                   @_localizer["Send"] 
                                </button>
                                break;
                            case Status.UnPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2" id="@item.Id"
                                        onclick="ChangeStatus(this, 'ReviewPublished')">
                                  @_localizer["Publish"] 
                                </button><br />
                                break;
                            case Status.ReviewPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2" id="@item.Id"
                                        onclick="ChangeStatus(this, 'UnPublished')">
                                  @_localizer["Cancel"] 
                                </button>
                                break;
                            case Status.ReviewUnPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 " id="@item.Id"
                                        onclick="ChangeStatus(this, 'Published')">
                                   @_localizer["CancelWithdrawa"]
                                </button>
                                break;
                            case Status.Expired:
                                break;
                        }
                    </div>
                </div>
            </div>
            <div class="text-light bg-danger text-center align-content-between admin-event px-2" style="line-height: 40px">
                @if (item.StatusDescription != null)
                {
                    @switch (item.Status)
                    {
                        case Status.Published:
                            <span>@_localizer["WithdrawalDenied"]: @item.StatusDescription</span>
                            break;
                        case Status.UnPublished:
                            <span>@_localizer["DeniedPublication"]: @item.StatusDescription</span>
                            break;
                        case Status.Rejected:
                            <span>@_localizer["RefusedForTheReason"]: @item.StatusDescription</span>
                            break;
                    }
                }
            </div>
        </div>
    }
</div>
